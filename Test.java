
import java.util.Scanner;

public class Test {
    static Scanner scan = new Scanner(System.in);

    public static void main(String[] args) {
        do {
            System.out.print("Which set do you want? ");
            int want = scan.nextInt();
            Sudoku sudoku = new Sudoku(creating(want));
            if(want == 0)
                break;
            printSudoku(sudoku);
            Algorithm.fill(sudoku);
            System.out.println();
            printSudoku(sudoku);
            announce(sudoku, want);
        } while(true);
    }

    public static int[][] creating(int num) {
        int[][] s = new int[9][9];
        if(num==1){
            s = new int[][]{
                    {9, 8, 0, 0, 0, 6, 3, 0, 0},
                    {0, 0, 0, 3, 0, 7, 5, 2, 0},
                    {0, 2, 3, 0, 5, 0, 4, 0, 9},
                    {1, 6, 2, 0, 0, 4, 9, 0, 5},
                    {8, 0, 0, 6, 0, 5, 0, 0, 3},
                    {5, 0, 4, 2, 0, 0, 6, 7, 1},
                    {3, 0, 1, 0, 6, 0, 8, 9, 0},
                    {0, 4, 9, 8, 0, 3, 0, 0, 0},
                    {0, 0, 8, 9, 0, 0, 0, 3, 2},
            };}
        if(num==2) {
            s = new int[][]{
                    {0, 0, 6, 4, 0, 0, 0, 3, 0},
                    {2, 3, 0, 6, 1, 0, 7, 0, 0},
                    {0, 1, 0, 0, 7, 9, 0, 2, 0},
                    {0, 2, 0, 0, 0, 0, 5, 1, 0},
                    {8, 9, 1, 7, 0, 5, 2, 4, 3},
                    {0, 5, 4, 0, 0, 0, 0, 9, 0},
                    {0, 7, 0, 5, 9, 0, 0, 8, 2},
                    {0, 0, 2, 0, 3, 4, 0, 7, 1},
                    {0, 4, 0, 0, 0, 7, 3, 0, 0},
            };}
        if(num==3) {
            s = new int[][]{
                    {2, 8, 5, 6, 0, 0, 3, 4, 1},
                    {0, 4, 0, 3, 0, 8, 0, 0, 0},
                    {6, 0, 0, 1, 0, 0, 8, 0, 9},
                    {5, 0, 6, 0, 0, 0, 1, 0, 4},
                    {0, 1, 9, 0, 0, 0, 5, 2, 0},
                    {8, 0, 4, 0, 0, 0, 6, 0, 3},
                    {1, 0, 3, 0, 0, 2, 0, 0, 7},
                    {0, 0, 0, 7, 0, 3, 0, 1, 0},
                    {0, 9, 8, 0, 0, 1, 2, 3, 6},
            };}
        if(num==4) {
            s = new int[][]{
                    {0, 0, 0, 2, 0, 8, 1, 0, 0},
                    {4, 0, 5, 7, 0, 1, 8, 0, 0},
                    {1, 0, 0, 0, 5, 0, 0, 7, 4},
                    {6, 9, 7, 0, 0, 3, 2, 4, 0},
                    {0, 0, 0, 0, 0, 0, 0, 0, 0},
                    {0, 1, 3, 6, 0, 0, 7, 9, 5},
                    {3, 5, 0, 0, 6, 0, 0, 0, 9},
                    {0, 0, 2, 4, 0, 9, 5, 0, 7},
                    {0, 0, 9, 1, 0, 5, 0, 0, 0},
            };}
        if(num==25) {
            s = new int[][]{
                    {0, 0, 5, 1, 6, 0, 0, 8, 0},
                    {7, 0, 0, 0, 8, 0, 0, 0, 0},
                    {0, 4, 0, 7, 0, 2, 5, 0, 0},
                    {0, 9, 0, 0, 0, 1, 7, 0, 0},
                    {0, 0, 7, 0, 0, 0, 1, 0, 0},
                    {0, 0, 4, 9, 0, 0, 0, 5, 0},
                    {0, 0, 1, 2, 0, 3, 0, 9, 0},
                    {0, 0, 0, 0, 9, 0, 0, 0, 8},
                    {0, 3, 0, 0, 1, 8, 6, 0, 0},
            };}
        if(num==50) {
            s = new int[][]{
                    {0, 0, 1, 3, 0, 0, 4, 0, 0},
                    {0, 0, 0, 0, 0, 0, 0, 6, 0},
                    {0, 0, 0 ,5, 0, 4, 0, 2, 0},
                    {2, 0, 0, 7, 0, 6, 0, 0, 3},
                    {0, 3, 0, 0, 1, 0, 0, 8, 0},
                    {1, 0, 0, 4, 0, 8, 0, 0, 6},
                    {0, 8, 0, 1, 0, 3, 0, 0, 0},
                    {0, 5, 0, 0, 0, 0, 0, 0, 0},
                    {0, 0, 4, 0, 0, 2, 7, 0, 0},
            };}
        if(num==69) {
            s = new int[][] {
                    {0, 0, 0, 5, 0, 0, 1, 6, 0},
                    {0, 0, 7, 0, 0, 0, 4, 0, 0},
                    {1, 0, 4, 8, 7, 0, 0, 0, 0},
                    {2, 0, 5, 0, 0, 3, 0, 4, 0},
                    {0, 3, 0, 0, 0, 0, 0, 2, 0},
                    {0, 4, 0, 9, 0, 0, 3, 0, 5},
                    {0, 0, 0, 0, 9, 1, 5, 0, 4},
                    {0, 0, 9, 0, 0, 0, 2, 0, 0},
                    {0, 1, 6, 0, 0, 8, 0, 0, 0},
            };}
        if(num==75) {
            s = new int[][] {
                    {0, 1, 0, 0, 0, 3, 0, 0, 2},
                    {0, 9, 3, 0, 2, 7, 1, 0, 0},
                    {0, 0, 0, 5, 0, 0, 0, 0, 0},
                    {0, 5, 0, 0, 0, 0, 0, 9, 0},
                    {6, 0, 2, 0, 0, 0, 8, 0, 3},
                    {0, 3, 0, 0, 0, 0, 0, 2, 0},
                    {0, 0, 0, 0, 0, 1, 0, 0, 0},
                    {0, 0, 1, 8, 9, 0, 7, 4, 0},
                    {5, 0, 0, 6, 0, 0, 0, 1, 0},
            };}
        return s;
    }

    public static void printSudoku(Sudoku s) {
        int[][] sudoku = s.sdk;
        for(int i=0; i<sudoku.length; i++) {
            for(int j=0; j<sudoku[0].length; j++) {
                if(sudoku[i][j]!=0)
                    System.out.print(sudoku[i][j]+", ");
                else
                    System.out.print("â–¡, ");
            }
            System.out.println();
        }
    }

    //1 2 3 4 25 50.txt 69 75
    public static void announce(Sudoku s, int num) {
        int[][] sudoku = s.sdk;
        int[][] answer = new int[9][9];
        if(num==1) {
            answer = new int[][] {
                    {9, 8, 5, 4, 2, 6, 3, 1, 7},
                    {4, 1, 6, 3, 9, 7, 5, 2, 8},
                    {7, 2, 3, 1, 5, 8, 4, 6, 9},
                    {1, 6, 2, 7, 3, 4, 9, 8, 5},
                    {8, 9, 7, 6, 1, 5, 2, 4, 3},
                    {5, 3, 4, 2, 8, 9, 6, 7, 1},
                    {3, 7, 1, 5, 6, 2, 8, 9, 4},
                    {2, 4, 9, 8, 7, 3, 1, 5, 6},
                    {6, 5, 8, 9, 4, 1, 7, 3, 2},
            };}
        if(num==2) {
            answer = new int[][] {
                    {7, 8, 6, 4, 5, 2, 1, 3, 9},
                    {2, 3, 9, 6, 1, 8, 7, 5, 4},
                    {4, 1, 5, 3, 7, 9, 8, 2, 6},
                    {6, 2, 7, 9, 4, 3, 5, 1, 8},
                    {8, 9, 1, 7, 6, 5, 2, 4, 3},
                    {3, 5, 4, 2, 8, 1, 6, 9, 7},
                    {1, 7, 3, 5, 9, 6, 4, 8, 2},
                    {5, 6, 2, 8, 3, 4, 9, 7, 1},
                    {9, 4, 8, 1, 2, 7, 3, 6, 5},
            };}
        if(num==3) {
            answer = new int[][] {
                    {2, 8, 5, 6, 9, 7, 3, 4, 1},
                    {9, 4, 1, 3, 5, 8, 7, 6, 2},
                    {6, 3, 7, 1, 2, 4, 8, 5, 9},
                    {5, 2, 6, 8, 3, 9, 1, 7, 4},
                    {3, 1, 9, 4, 7, 6, 5, 2, 8},
                    {8, 7, 4, 2, 1, 5, 6, 9, 3},
                    {1, 5, 3, 9, 6, 2, 4, 8, 7},
                    {4, 6, 2, 7, 8, 3, 9, 1, 5},
                    {7, 9, 8, 5, 4, 1, 2, 3, 6},
            };}
        if(num==4) {
            answer = new int[][]{
                    {9, 7, 6, 2, 4, 8, 1, 5, 3},
                    {4, 3, 5, 7, 9, 1, 8, 6, 2},
                    {1, 2, 8, 3, 5, 6, 9, 7, 4},
                    {6, 9, 7, 5, 1, 3, 2, 4, 8},
                    {5, 8, 4, 9, 7, 2, 6, 3, 1},
                    {2, 1, 3, 6, 8, 4, 7, 9, 5},
                    {3, 5, 1, 8, 6, 7, 4, 2, 9},
                    {8, 6, 2, 4, 3, 9, 5, 1, 7},
                    {7, 4, 9, 1, 2, 5, 3, 8, 6},
            };}
        if(num==25) {
            answer = new int[][]{
                    {3, 2, 5, 1, 6, 4, 9, 8, 7},
                    {7, 1, 6, 5, 8, 9, 2, 3, 4},
                    {9, 4, 8, 7, 3, 2, 5, 6, 1},
                    {2, 9, 3, 8, 5, 1, 7, 4, 6},
                    {8, 5, 7, 3, 4, 6, 1, 2, 9},
                    {1, 6, 4, 9, 2, 7, 8, 5, 3},
                    {6, 8, 1, 2, 7, 3, 4, 9, 5},
                    {4, 7, 2, 6, 9, 5, 3, 1, 8},
                    {5, 3, 9, 4, 1, 8, 6, 7, 2},
            };}
        if(num==50) {
            answer = new int[][]{
                    {5, 6, 1, 3, 2, 7, 4, 9, 8},
                    {4, 2, 3, 9, 8, 1, 5, 6, 7},
                    {8, 7, 9, 5, 6, 4, 3, 2, 1},
                    {2, 4, 8, 7, 9, 6, 1, 5, 3},
                    {7, 3, 6, 2, 1, 5, 9, 8, 4},
                    {1, 9, 5, 4, 3, 8, 2, 7, 6},
                    {9, 8, 2, 1, 7, 3, 6, 4, 5},
                    {3, 5, 7, 6, 4, 9, 8, 1, 2},
                    {6, 1, 4, 8, 5, 2, 7, 3, 9},
            };}
        if(num==69) {
            answer = new int[][] {
                    {8, 9, 2, 5, 3, 4, 1, 6, 7},
                    {3, 6, 7, 2, 1, 9, 4, 5, 8},
                    {1, 5, 4, 8, 7, 6, 9, 3, 2},
                    {2, 7, 5, 1, 6, 3, 8, 4, 9},
                    {9, 3, 8, 7, 4, 5, 6, 2, 1},
                    {6, 4, 1, 9, 8, 2, 3, 7, 5},
                    {7, 2, 3, 6, 9, 1, 5, 8, 4},
                    {4, 8, 9, 3, 5, 7, 2, 1, 6},
                    {5, 1, 6, 4, 2, 8, 7, 9, 3},
            };}
        if(num==75) {
            answer = new int[][] {
                    {7, 1, 5, 9, 6, 3, 4, 8, 2},
                    {8, 9, 3, 4, 2, 7, 1, 6, 5},
                    {2, 6, 4, 5, 1, 8, 9, 3, 7},
                    {1, 5, 7, 3, 8, 2, 6, 9, 4},
                    {6, 4, 2, 1, 5, 9, 8, 7, 3},
                    {9, 3, 8, 7, 4, 6, 5, 2, 1},
                    {4, 8, 6, 2, 7, 1, 3, 5, 9},
                    {3, 2, 1, 8, 9, 5, 7, 4, 6},
                    {5, 7, 9, 6, 3, 4, 2, 1, 8},
            };}
        boolean bu = true;
        for(int i=0; i<9; i++) {
            for(int j=0; j<9; j++) {
                if(sudoku[i][j]!=answer[i][j] && sudoku[i][j]!=0)
                    bu = false;
            }
        }
        System.out.println();
        if(Algorithm.status == false) {
            System.out.println("Failed to jSolve");
            return;
        }
        if(bu)
            System.out.println("And they are All Correct");
        else
            System.out.println("...they are not correct");
    }
}